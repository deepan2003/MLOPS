# This is the final, verified CI/CD pipeline for AWS EC2.
# It unifies the testing and deployment logic to solve the skipped job issue.

name: 🏥 MLOps Pipeline for AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch: # This enables the "Run workflow" button for manual deployments

env:
  PYTHON_VERSION: '3.9'
  PROJECT_DIR: /home/ubuntu/MLOPS

jobs:
  # JOB 1: Combined DVC, Quality, and Model Change Check
  build-and-test:
    name: 🔄 Build, Test, and Check for Model Changes
    runs-on: ubuntu-latest
    outputs:
      model-changed: ${{ steps.check-changes.outputs.model-changed }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff

      - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install All Dependencies
        run: pip install -r requirements.txt

      - name: 🔐 Configure DVC S3 Remote
        run: dvc remote modify s3remote endpointurl https://play.min.io && dvc remote default s3remote

      - name: 📊 Pull Latest Data from Remote
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: dvc pull

      - name: 🚀 Reproduce Model Pipeline
        run: dvc repro

      - name: 🔍 Check for Model Changes
        id: check-changes
        run: |
          if git diff --quiet HEAD^ HEAD -- models/ || [ ! -d models ]; then
            echo "model-changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No model changes detected."
          else
            echo "model-changed=true" >> $GITHUB_OUTPUT
            echo "✅ Model has changed. Deployment will be triggered."
          fi

      - name: 🧪 Run Quality Checks with Tox
        run: tox -e py39,lint,security

  # JOB 2: Deployment
  deploy-to-ec2:
    name: "🚀 Deploy to AWS EC2"
    runs-on: ubuntu-latest
    needs: build-and-test # This job runs only after the first job succeeds
    # This rule says "Run if the model changed OR if this was a manual run"
    if: |
      github.ref == 'refs/heads/main' && 
      (needs.build-and-test.outputs.model-changed == 'true' || github.event_name == 'workflow_dispatch')
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📂 Sync Project Files to EC2 Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: 22
          source: "."
          target: ${{ env.PROJECT_DIR }}

      - name: 🚀 Execute Deployment Script on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: 22
          script: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            
            cd ${{ env.PROJECT_DIR }}
            
            # Make the deployment script executable and run it
            chmod +x deploy.sh
            ./deploy.sh

